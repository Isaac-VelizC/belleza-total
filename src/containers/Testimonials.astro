---
import HeaderSection from "@components/ui/HeaderSection.astro";
import data from "../assets/json/data.json";
import CardTestimotion from "@components/ui/CardTestimotion.astro";

const infoData = data.testimonials;
---

<section class="h-auto w-full py-20 bg-background overflow-hidden">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <HeaderSection text=" ✨ Testimonios" titleprimary="Lo que dicen" titleColor="nuestras clientas" description="Descubre por qué miles de mujeres confían en nosotros para realzar su belleza natural">

    </HeaderSection>

    <!-- Carousel Container -->
    <div class="relative">
      <div id="testimonials-carousel" class="flex transition-transform duration-500 ease-in-out">
        {infoData.map((item) => (
          <CardTestimotion item={item} />
        ))}
      </div>

      <!-- Navigation Buttons -->
      <button 
        id="prev-btn"
        class="absolute left-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-white border-2 border-primary text-primary rounded-full shadow-lg hover:bg-primary hover:text-white transition-all duration-300 group z-10"
        aria-label="Testimonio anterior"
      >
        <svg class="w-6 h-6 mx-auto group-hover:animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"/>
        </svg>
      </button>
      
      <button 
        id="next-btn"
        class="absolute right-4 top-1/2 -translate-y-1/2 w-12 h-12 bg-white border-2 border-primary text-primary rounded-full shadow-lg hover:bg-primary hover:text-white transition-all duration-300 group z-10"
        aria-label="Siguiente testimonio"
      >
        <svg class="w-6 h-6 mx-auto group-hover:animate-pulse" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
        </svg>
      </button>
    </div>

    <!-- Dots Navigation -->
    <div class="flex justify-center mt-12 gap-3">
      {infoData.map((_, index) => (
        <button 
          class={`dot w-3 h-3 rounded-full transition-all duration-300 ${index === 0 ? 'bg-primary w-8' : 'bg-secondary'} hover:bg-primary`}
          data-slide={index}
          aria-label={`Ir al testimonio ${index + 1}`}
        />
      ))}
    </div>
  </div>
</section>

<script>
  // Carousel functionality
  const carousel = document.getElementById('testimonials-carousel');
  const prevBtn = document.getElementById('prev-btn');
  const nextBtn = document.getElementById('next-btn');
  const dots = document.querySelectorAll('.dot');
  
  let currentSlide = 0;
  const totalSlides = dots.length;

  function updateCarousel() {
    if (carousel) {
      carousel.style.transform = `translateX(-${currentSlide * 100}%)`;
    }
    
    // Update dots
    dots.forEach((dot, index) => {
      if (index === currentSlide) {
        dot.classList.remove('bg-secondary', 'w-3');
        dot.classList.add('bg-primary', 'w-8');
      } else {
        dot.classList.remove('bg-primary', 'w-8');
        dot.classList.add('bg-secondary', 'w-3');
      }
    });
  }

  function nextSlide() {
    currentSlide = (currentSlide + 1) % totalSlides;
    updateCarousel();
  }

  function prevSlide() {
    currentSlide = (currentSlide - 1 + totalSlides) % totalSlides;
    updateCarousel();
  }

  // Event listeners
  nextBtn?.addEventListener('click', nextSlide);
  prevBtn?.addEventListener('click', prevSlide);

  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      currentSlide = index;
      updateCarousel();
    });
  });

  // Auto-scroll
  let autoScroll = setInterval(nextSlide, 5000);

  // Pause auto-scroll on hover
  const section = document.querySelector('section');
  section?.addEventListener('mouseenter', () => {
    clearInterval(autoScroll);
  });

  section?.addEventListener('mouseleave', () => {
    autoScroll = setInterval(nextSlide, 5000);
  });

  // Touch/swipe support for mobile
  let startX = 0;
  let endX = 0;

  carousel?.addEventListener('touchstart', (e) => {
    startX = e.touches[0].clientX;
  });

  carousel?.addEventListener('touchend', (e) => {
    endX = e.changedTouches[0].clientX;
    const diff = startX - endX;
    
    if (Math.abs(diff) > 50) {
      if (diff > 0) {
        nextSlide();
      } else {
        prevSlide();
      }
    }
  });
</script>