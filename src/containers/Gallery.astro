---
import HeaderSection from "@components/ui/HeaderSection.astro";
import SectionFilterGallery from "@components/SectionFilterGallery.astro";
---

<section
  id="gallery"
  class="py-20 lg:py-32 bg-gradient-to-b from-white via-background to-white relative overflow-hidden"
>
  <!-- Elementos decorativos de fondo -->
  <div
    class="absolute top-20 left-10 w-64 h-64 bg-primary/5 rounded-full blur-3xl animate-pulse"
  >
  </div>
  <div
    class="absolute bottom-20 right-10 w-48 h-48 bg-secondary/8 rounded-full blur-2xl animate-bounce"
  >
  </div>
  <div
    class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-40 h-40 bg-[#FFC107]/5 rounded-full blur-2xl animate-pulse delay-500"
  >
  </div>

  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
    <!-- Header de la sección -->
    <HeaderSection
      text="Nuestros Trabajos"
      titleColor="Galería"
      titleSecondary="de Transformaciones"
      description="Descubre el arte de la belleza a través de nuestras increíbles transformaciones. Cada imagen cuenta una historia de confianza, estilo y satisfacción."
    >
      <svg
        slot="icon"
        class="w-5 h-5 text-primary"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"
        ></path>
      </svg>
    </HeaderSection>

    <SectionFilterGallery />

    <!-- Botón para cargar más -->
    <div class="text-center mt-16">
      <button
        class="load-more bg-gradient-to-r from-primary to-secondary text-white px-8 py-4 rounded-full font-bold text-lg hover:from-primary/90 hover:to-secondary/90 hover:shadow-lg transform hover:-translate-y-1 transition-all duration-300 inline-flex items-center gap-3"
      >
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
        </svg>
        Ver Más Transformaciones
        <span class="bg-white/20 px-2 py-1 rounded-full text-sm">+20</span>
      </button>
    </div>
  </div>

  <!-- Lightbox Modal -->
  <div
    id="lightbox"
    class="fixed inset-0 bg-black/95 backdrop-blur-sm z-50 flex items-center justify-center opacity-0 invisible transition-all duration-300"
  >
    <div class="relative max-w-4xl max-h-[90vh] p-4">
      <!-- Botón cerrar -->
      <button
        id="close-lightbox"
        class="absolute -top-12 right-0 text-white hover:text-primary transition-colors duration-300"
      >
        <svg
          class="w-8 h-8"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>

      <!-- Imagen del lightbox -->
      <img
        id="lightbox-img"
        src=""
        alt=""
        class="max-w-full max-h-[500px] object-contain rounded-2xl shadow-2xl"
      />

      <!-- Navegación -->
      <button
        id="prev-btn"
        class="absolute left-4 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm text-white p-3 rounded-full hover:bg-white/30 transition-colors duration-300"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M15 19l-7-7 7-7"></path>
        </svg>
      </button>

      <button
        id="next-btn"
        class="absolute right-4 top-1/2 transform -translate-y-1/2 bg-white/20 backdrop-blur-sm text-white p-3 rounded-full hover:bg-white/30 transition-colors duration-300"
      >
        <svg
          class="w-6 h-6"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M9 5l7 7-7 7"></path>
        </svg>
      </button>
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const galleryItems =
      document.querySelectorAll<HTMLElement>(".gallery-item");
    const lightbox = document.getElementById("lightbox") as HTMLElement | null;
    const lightboxImg = document.getElementById(
      "lightbox-img"
    ) as HTMLImageElement | null;
    const closeLightbox = document.getElementById(
      "close-lightbox"
    ) as HTMLElement | null;
    const prevBtn = document.getElementById("prev-btn") as HTMLElement | null;
    const nextBtn = document.getElementById("next-btn") as HTMLElement | null;
    const currentImageSpan = document.getElementById(
      "current-image"
    ) as HTMLElement | null;
    const loadMoreBtn = document.querySelector(
      ".load-more"
    ) as HTMLButtonElement | null;

    let currentImageIndex = 0;

    // Lightbox functionality
    galleryItems.forEach((item, index) => {
      const zoomBtn = item.querySelector(".gallery-zoom");

      zoomBtn?.addEventListener("click", (e) => {
        e.stopPropagation();
        openLightbox(index);
      });

      item.addEventListener("click", () => {
        openLightbox(index);
      });
    });

    function openLightbox(index: number) {
      currentImageIndex = index;
      const imgSrc = galleryItems[index].getAttribute("data-src");
      if (!imgSrc || !lightboxImg || !lightbox) return;

      lightboxImg.src = imgSrc;
      lightbox.classList.remove("opacity-0", "invisible");
      lightbox.classList.add("opacity-100", "visible");

      if (currentImageSpan) {
        currentImageSpan.textContent = (index + 1).toString();
      }

      document.body.style.overflow = "hidden";
    }

    function closeLightboxModal() {
      if (!lightbox) return;
      lightbox.classList.add("opacity-0", "invisible");
      lightbox.classList.remove("opacity-100", "visible");
      document.body.style.overflow = "";
    }

    // Navegación
    prevBtn?.addEventListener("click", () => {
      currentImageIndex =
        currentImageIndex > 0 ? currentImageIndex - 1 : galleryItems.length - 1;
      const imgSrc = galleryItems[currentImageIndex].getAttribute("data-src");
      if (!imgSrc || !lightboxImg) return;

      lightboxImg.src = imgSrc;
      if (currentImageSpan) {
        currentImageSpan.textContent = (currentImageIndex + 1).toString();
      }
    });

    nextBtn?.addEventListener("click", () => {
      currentImageIndex =
        currentImageIndex < galleryItems.length - 1 ? currentImageIndex + 1 : 0;
      const imgSrc = galleryItems[currentImageIndex].getAttribute("data-src");
      if (!imgSrc || !lightboxImg) return;

      lightboxImg.src = imgSrc;
      if (currentImageSpan) {
        currentImageSpan.textContent = (currentImageIndex + 1).toString();
      }
    });

    // Cerrar
    closeLightbox?.addEventListener("click", closeLightboxModal);
    lightbox?.addEventListener("click", (e) => {
      if (e.target === lightbox) closeLightboxModal();
    });

    // Navegación con teclado
    document.addEventListener("keydown", (e) => {
      if (!lightbox || !lightbox.classList.contains("visible")) return;

      if (e.key === "Escape") closeLightboxModal();
      if (e.key === "ArrowLeft") prevBtn?.click();
      if (e.key === "ArrowRight") nextBtn?.click();
    });

    // Load more
    loadMoreBtn?.addEventListener("click", function (this: HTMLButtonElement) {
      this.innerHTML = `
      <svg class="w-5 h-5 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
          d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581
          m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15">
        </path>
      </svg>
      Cargando...
    `;

      setTimeout(() => {
        this.innerHTML = `
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
        </svg>
        ¡Todas las imágenes cargadas!
      `;
        this.disabled = true;
        this.classList.add("opacity-50", "cursor-not-allowed");
      }, 1500);
    });
  });
</script>
